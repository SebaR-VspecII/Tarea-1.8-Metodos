# -*- coding: utf-8 -*-
"""Tarea metodos (Sebastian Riquelme Araya).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W5A6YBHPA-OSjGUcMlsAQ2S3neb4ti5w
"""

import numpy as np
import matplotlib.pyplot as plt
import math

def f(x):
    return x * np.sin(x)

def taylor_f(x, n_terms = 10):
  taylor_sum = 0
  for n in range(n_terms):
    term = ((-1)**n * x**(2*n + 2)) / math.factorial(2*n + 1)
    taylor_sum += term
  return taylor_sum

x = np.linspace(-10, 10, 500)

y_real = f(x)
y_taylor = taylor_f(x)


plt.plot(x, y_real, label=r'$f\ (x) = x·sin(x)$', color = 'green')
plt.plot(x, y_taylor, label=r'$Serie\ de\ Taylor$', linestyle='--', color = 'orange')
plt.xlabel(r'$x$')
plt.ylabel(r'$f\ (x)\ &\ Su\ Serie\ de\ Taylor$')
plt.title(r'$Gráfica\ de\ x·sin(x)\ &\ Su\ Serie\ de\ Taylor$')
plt.legend()
plt.grid(True)
plt.show()

# ¿Hasta cuál valor de x parece ser una buena aproximación?
# Hasta el valor de x=[-7.5 , 7.5], ya que, luego la serie de Taylor difiere completamente de la función, en cambio dentro del intervalo señalado la serie de Taylor cumple con ser una buena aproximación de  la función.